load("@rules_python//python:defs.bzl", "py_binary")
load("@bazel_tools//tools/build_rules:test_rules.bzl", "file_test")

genrule(
    name = "bzip2-version",
    testonly = True,
    outs = ["bzip2-version.txt"],
    cmd = """
    export LD_LIBRARY_PATH="$(execpath @bzip2-1.0.8//:dir)/lib"
    ldd $(execpath @bzip2-1.0.8//:bin/bzip2)
    $(execpath @bzip2-1.0.8//:bin/bzip2) --version 2>&1 | head -n1 | tee $@
    """,
    tools = [
        "@bzip2-1.0.8//:bin/bzip2",
        "@bzip2-1.0.8//:dir",
    ],
)

file_test(
    name = "test-bzip2-version",
    content = "bzip2, a block-sorting file compressor.  Version 1.0.8, 13-Jul-2019.\n",
    file = ":bzip2-version",
)

genrule(
    name = "openssl-version",
    testonly = True,
    outs = ["openssl-version.txt"],
    cmd = """
    export LD_LIBRARY_PATH="$(execpath @openssl-1.1.1w//:dir)/lib"
    ldd $(execpath @openssl-1.1.1w//:bin/openssl)
    $(execpath @openssl-1.1.1w//:bin/openssl) version | tee $@
    """,
    tools = [
        "@openssl-1.1.1w//:bin/openssl",
        "@openssl-1.1.1w//:dir",
    ],
)

file_test(
    name = "test-openssl-version",
    content = "OpenSSL 1.1.1w  11 Sep 2023\n",
    file = ":openssl-version",
)

genrule(
    name = "python-version",
    testonly = True,
    outs = ["python-version.txt"],
    cmd = """$(PYTHON3) --version | tee $@""",
    toolchains = ["@rules_python//python:current_py_toolchain"],
)

file_test(
    name = "test-python-version",
    content = "Python 3.6.15\n",
    file = ":python-version",
)

genrule(
    name = "python-openssl-version",
    testonly = True,
    outs = ["python-openssl-version.txt"],
    cmd = """
    export LD_LIBRARY_PATH="$(execpath @openssl-1.1.1w//:dir)/lib"
    $(PYTHON3) -c "import ssl; print(ssl.OPENSSL_VERSION)" | tee $@
    """,
    toolchains = ["@rules_python//python:current_py_toolchain"],
    tools = [
        "@openssl-1.1.1w//:dir",
    ],
)

file_test(
    name = "test-python-openssl-version",
    content = "OpenSSL 1.1.1w  11 Sep 2023\n",
    file = ":python-openssl-version",
)

# Use whichever python toolchain with --config py36|py39|py311 or omit for system python
py_binary(
    name = "hello",
    srcs = ["hello.py"],
)

# This only works as one expects when the right python toolchain is selected. Use --config py36
py_binary(
    name = "hello_ssl",
    srcs = ["hello_ssl.py"],
    data = [
        "@openssl-1.1.1w//:dir",
    ],
    env = {
        "LD_LIBRARY_PATH": "$(rootpath @openssl-1.1.1w//:dir)/lib",
    },
)

sh_binary(
    name = "python",
    srcs = ["@python-3.6.15//:bin/python3"],
    args = [
        "-sc",
        """'import os; print(os.getcwd()); print([(p, os.listdir(p)) for p in os.environ["LD_LIBRARY_PATH"].split(os.pathsep) if os.path.isdir(p)]); import ssl; print(ssl.OPENSSL_VERSION); import zlib; print(zlib.ZLIB_VERSION); print(zlib.ZLIB_RUNTIME_VERSION);'""",
    ],
    data = [
        "@bzip2-1.0.8//:dir",
        "@openssl-1.1.1w//:dir",
        "@python-3.6.15//:dir",
        "@zlib-1.3//:dir",
    ],
    env = {
        "LD_LIBRARY_PATH": "$(rootpath @openssl-1.1.1w//:dir)/lib:$(rootpath @bzip2-1.0.8//:dir)/lib:$(rootpath @python-3.6.15//:dir)/lib:$(rootpath @zlib-1.3//:dir)/lib",
    },
)
