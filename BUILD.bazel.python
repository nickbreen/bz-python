load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")
load("@rules_python//python:defs.bzl", "py_binary", "py_runtime", "py_runtime_pair")

genrule(
    name = "setup",
    outs = ["Modules/Setup.local"],
    cmd = """
    exec >> $@
    echo 'SSL=$(location @openssl//:dir)'
    echo '#_ssl _ssl.c -DUSE_SSL -I$$(SSL)/include -I$$(SSL)/include/openssl -L$$(SSL)/lib -lssl -lcrypto'
    echo '_ssl _ssl.c -DUSE_SSL -I$$(SSL)/include -I$$(SSL)/include/openssl $$(SSL)/lib/libssl.a $$(SSL)/lib/libcrypto.a  # statically link in libssl and libcrypto'
    """,
    tools = [
        "@openssl//:dir",
    ],
)

filegroup(
    name = "src",
    srcs = glob(
        include = ["**"],
        exclude = [
            "BUILD.bazel",
            "WORKSPACE",
        ],
    ) + [":setup"],
)

configure_make(
    name = "python",
    args = ["-j"],
    build_data = [
        "@bzip2//:dir",
        "@openssl//:dir",
    ],
    configure_in_place = True,
    configure_options = [
        """OPT=-O1""",  # https://bugs.python.org/issue45700
        """CFLAGS='-Dredacted="redacted"'""",  # https://github.com/bazelbuild/rules_foreign_cc/issues/239
    ],
    env = {
        "LD_LIBRARY_PATH": "$(execpath @openssl//:dir)/lib:$(execpath @bzip2//:dir)/lib",
    },
    lib_name = "python36",  # defaults to name: clashes with python binary
    lib_source = ":src",
    out_binaries = [
        "2to3",
        "2to3-3.6",
        "idle3",
        "idle3.6",
        "pydoc3",
        "pydoc3.6",
        "python3",
        "python3.6",
        "python3.6-config",
        "python3.6m",
        "python3.6m-config",
        "python3-config",
        "pyvenv",
        "pyvenv-3.6",
    ],
    out_data_dirs = ["lib"],
    deps = [
        "@bzip2",
        "@openssl",
    ],
)

filegroup(
    name = "bin/python3",
    srcs = [":python"],
    output_group = "python3",
    visibility = ["//visibility:public"],
)

filegroup(
    name = "dir",
    srcs = [":python"],
    output_group = "gen_dir",
    visibility = ["//visibility:public"],
)

py_runtime(
    name = "runtime3",
    files = [
        ":dir",
        "@bzip2//:dir",
        "@openssl//:dir",
    ],
    interpreter = ":bin/python3",
    python_version = "PY3",
)

py_runtime_pair(
    name = "runtimes",
    py2_runtime = None,
    py3_runtime = ":runtime3",
)

toolchain(
    name = "toolchain",
    toolchain = ":runtimes",
    toolchain_type = "@bazel_tools//tools/python:toolchain_type",
)
